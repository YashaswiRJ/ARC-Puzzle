User: Hey DeepSeek, let’s tackle a structured reasoning challenge!
You're exceptionally skilled at pattern recognition and logical reasoning, so I have an exciting task for you. Your goal is to learn the transformations that convert input tree to output tree, given few instances of input-output tree pairs. Next we will describe, how these trees look like, how to describe them in text and how transformations look like and how to describe them in text.

Understanding the Problem:
Input is a tree of shapes. Each shape becomes a tree node with attributes: Color-digit, Bounding box dimensions, Top-left corner position, Child details (nested shapes inside the bounding box)
The number 0 represents the background (if applicable).
Each distinct shape is formed by connected non-zero pixels.
Some shapes are nested within others, forming a hierarchical structure, that is, In the tree, if two shape nodes are in a parent-child relationships, then it means that the child shape will be nested within parent shape if they are rendered on the 2D plane.

Defining the Tree Representation (these are tree of different shapes): To represent the matrix as a tree:
Identify distinct shapes using connected non-zero pixels (8-neighbours connectivity). Connected components have same color and can have some another connected component (shape) nested inside them.
Find the minimal bounding rectangle enclosing each shape. 
Hierarchy Rules:
A shape (child) must be fully contained within its parent's bounding box.
Children always have a higher z-index than their parent, meaning if two shapes overlap, the child’s color takes precedence over the parent’s color.
Each node of the tree has an attribute blueprint, which is the bitmask representation of the shapes present in the figure.
The answer should be structured as follows
(color top_left_cell dimension unique_node_id [bitmask] children)
The children should also be structured in a similar manner.

To facilitate structured and predictable tree transformations, we define a Domain-Specific Language (DSL) containing a set of allowed tree operations. These operations modify the existing tree structure while ensuring structural integrity and logical consistency.
Each transformation must be deterministic, reversible when possible, and ensure that the tree remains valid after the operation. There are a total of 7 tranformations on the DSL as given below.

1. Add Node
Operation: Insert a new child node under an existing parent.
Parameters Required:[parent_id: Identifier of the existing parent node, node_id: Unique identifier for the new node, color: predefined pixel color value, position: Coordinates of top-left cell, dimensions: Dimension of bounding rectangle]

2. Translate (Shifting Position)
Parameters:[node_id: Target node, new_position: Updated coordinates (new_x, new_y)]
Operation: Adjusts the top-left position of the node in the matrix. 
Example: Translate(node_id, (new_x, new_y)):
...(color top_left_cell dimension unique_node_id [bitmask] children) transforms to ...(color (top_left_cell: new_x, new_y) dimension unique_node_id [bitmask] children)

3. Rotation
Operation: Rotates the node’s shape by 90, 180 or 270 degrees clockwise.
Parameters:[node_id: Target node, angle: Rotation angle (90, 180, 270).]
Effects: [The bounding box updates accordingly. The node’s blueprint updates to reflect the new orientation.]
Example: Rotation(node_id, 270):
....(color top_left_cell (3x2) unique_node_id [[0, 1], [1, 1], [1, 1]] children) transforms to ...(color transformed_top_left_cell (2x3) unique_node_id [[1, 1, 1], [0, 1, 1]] children)

4. Mirroring (Reflection) 
Operation: Reflects a node along a certain axes. 
Types of Reflection: [horizontal_mirror: Flip left-to-right, vertical_mirror: Flip top-to-bottom, left_diagonal_mirror: Flip along the top-left to bottom-right diagonal, right_diagonal_mirror: Flip along the top-right to bottom-left diagonal] 
Parameters: [node_id: Target node, type: Type of reflection] 
Example 1: Mirroring(node_id, horizontal_mirror): 
....(color top_left_cell (3x2) unique_node_id [[0, 1], [1, 1], [1, 1]] children) transforms to .... (color top_left_cell (3x2) unique_node_id [[1, 1], [1, 1], [0, 1]] children)
Example 2: Mirroring(node_id, left_diagonal_mirror): 
....(color top_left_cell (3x2) unique_node_id [[1, 1, 1], [0, 0, 1], [0, 0, 1]] children) transforms to .... (color top_left_cell (3x2) unique_node_id [[1, 0, 0], [1, 0, 0], [1, 1, 1]] children)

5. Flood_Fill (Inner Filling)
Operation: Fills an enclosed region inside a node’s blueprint, ensuring the boundaries remain unchanged.
Parameters: [node_id: Target node identifier]
Example: Flood_Fill(node_id):
....(color top_left_cell (3x4) unique_node_id [[1, 1, 1, 0], [1, 0, 1, 1], [1, 1, 1, 0]] children) transforms to ....(color top_left_cell (3x4) unique_node_id [[1, 1, 1, 0], [1, 1, 1, 1], [1, 1, 1, 0]] children)

6. Change_Node_Color
Parameters: [node_id: Target node, new_color: Updated color value]
Operation: Change color attribute of the node.
Example: Change_Node_Color(node_id, new_color):
...(color top_left_cell dimension [bitmask] children) transforms to ...(new_color top_left_cell dimension [bitmask] children)

7. Remove Node
Operation: Deletes a specific node from the tree. The children of this node become the direct children of parent of this node.
Parameters: [node_id: Target node.]
Example: Remove_Node(2)
...(3 (0,0) (9x9) 1 [ [0,0,0,0,0,1,0,0,0], [0,0,0,0,1,0,0,0,0], [0,1,1,0,1,1,0,1,0], [1,0,0,1,0,0,1,0,1], [0,0,0,1,0,0,1,1,0], [0,0,0,1,0,0,1,0,0], [0,0,0,1,0,0,1,0,0], [0,0,0,0,1,1,0,1,0], [0,0,0,0,0,0,0,0,1]]  (4 (3,4) (4x2) 2 [[1,1],[1,1],[1,1],[1,1]])  (4 (3,7) (1x1) 3 [[1]])) transforms to ...(3 (0,0) 9x9 1 [ [0,0,0,0,0,1,0,0,0], [0,0,0,0,1,0,0,0,0], [0,1,1,0,1,1,0,1,0], [1,0,0,1,0,0,1,0,1], [0,0,0,1,0,0,1,1,0], [0,0,0,1,0,0,1,0,0], [0,0,0,1,0,0,1,0,0], [0,0,0,0,1,1,0,1,0], [0,0,0,0,0,0,0,0,1]] (4 (3,7) (1x1) 3 [[1]]))
-------------------------------------------------------

Every operation follows a strict parameterized format, that is, the output should be given in the specified format.
Error handling should ensure logical consistency after each transformation.
Parent-child relationships must be preserved, except when explicitly modified.
This structured DSL ensures precise, predictable tree transformations while restricting the search space for LLM-driven modifications.

I will give a few example pairs of input-output tree along with one test input tree. I want you to identify the tree operations used in the examples and apply the same on the test input sequentially. The output should be a program, that is, a sequence of operations that you applied on test input in order to get the output tree. Make sure that you use only the tree operations that are described above.,


Train Example 0
Input Tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (2 (3, 2) (1x1) 21 [[1]] ) (5 (4, 1) (1x1) 28 [[1]] ) (2 (4, 4) (1x1) 29 [[1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (5 (2, 2) (2x2) 14 [[1, 0], [0, 1]] ) (4 (3, 1) (2x2) 20 [[1, 0], [0, 1]] ) (3 (3, 3) (2x2) 22 [[0, 1], [1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]] (2 (1, 6) (1x1) 4 [[1]] ) (5 (1, 9) (1x1) 7 [[1]] ) (2 (1, 11) (1x1) 8 [[1]] ) (3 (1, 12) (1x1) 9 [[1]] ) (5 (1, 14) (1x1) 11 [[1]] ) (2 (1, 16) (1x1) 12 [[1]] ) (5 (2, 17) (1x1) 19 [[1]] ) (4 (3, 6) (1x1) 23 [[1]] ) (2 (3, 17) (1x1) 27 [[1]] ) (2 (4, 9) (1x1) 30 [[1]] ) (5 (4, 11) (1x1) 31 [[1]] ) (4 (4, 12) (1x1) 32 [[1]] ) (2 (4, 14) (1x1) 33 [[1]] ) (5 (4, 16) (1x1) 34 [[1]] ) (2 (6, 1) (1x1) 35 [[1]] ) (5 (6, 4) (1x1) 38 [[1]] ) (2 (6, 6) (1x1) 39 [[1]] ) (5 (6, 9) (1x1) 42 [[1]] ) (5 (6, 14) (1x1) 43 [[1]] ) (2 (6, 16) (1x1) 44 [[1]] ) (3 (7, 11) (1x1) 50 [[1]] ) (4 (7, 14) (1x1) 53 [[1]] ) (5 (7, 17) (1x1) 54 [[1]] ) (2 (8, 17) (1x1) 62 [[1]] ) (5 (9, 1) (1x1) 63 [[1]] ) (2 (9, 4) (1x1) 64 [[1]] ) (5 (9, 6) (1x1) 65 [[1]] ) (2 (9, 9) (1x1) 66 [[1]] ) (5 (9, 11) (1x1) 67 [[1]] ) (2 (9, 14) (1x1) 68 [[1]] ) (5 (9, 16) (1x1) 69 [[1]] ) (5 (11, 4) (1x1) 70 [[1]] ) (2 (11, 6) (1x1) 71 [[1]] ) (5 (11, 9) (1x1) 74 [[1]] ) (2 (11, 11) (1x1) 75 [[1]] ) (5 (11, 14) (1x1) 78 [[1]] ) (2 (11, 16) (1x1) 79 [[1]] ) (4 (12, 4) (1x1) 81 [[1]] ) (5 (12, 17) (1x1) 86 [[1]] ) (2 (13, 2) (1x1) 88 [[1]] ) (5 (13, 3) (1x1) 89 [[1]] ) (2 (13, 17) (1x1) 96 [[1]] ) (5 (14, 1) (1x1) 97 [[1]] ) (2 (14, 4) (1x1) 98 [[1]] ) (5 (14, 6) (1x1) 99 [[1]] ) (2 (14, 9) (1x1) 100 [[1]] ) (5 (14, 11) (1x1) 101 [[1]] ) (2 (14, 14) (1x1) 102 [[1]] ) (5 (14, 16) (1x1) 103 [[1]] ) (2 (16, 1) (1x1) 104 [[1]] ) (5 (16, 4) (1x1) 107 [[1]] ) (2 (16, 6) (1x1) 108 [[1]] ) (5 (16, 9) (1x1) 111 [[1]] ) (2 (16, 11) (1x1) 112 [[1]] ) (5 (16, 14) (1x1) 115 [[1]] ) (2 (16, 16) (1x1) 116 [[1]] ) (5 (17, 2) (1x1) 118 [[1]] ) (2 (17, 3) (1x1) 119 [[1]] ) (5 (17, 7) (1x1) 120 [[1]] ) (2 (17, 8) (1x1) 121 [[1]] ) (5 (17, 12) (1x1) 122 [[1]] ) (2 (17, 13) (1x1) 123 [[1]] ) (5 (17, 17) (1x1) 124 [[1]] ) (3 (1, 6) (2x2) 5 [[0, 1], [1, 0]] ) (4 (1, 8) (2x2) 6 [[1, 0], [0, 1]] ) (4 (1, 13) (2x2) 10 [[1, 0], [0, 1]] ) (3 (1, 16) (2x2) 13 [[0, 1], [1, 0]] ) (5 (2, 7) (2x2) 15 [[1, 0], [0, 1]] ) (2 (2, 7) (2x2) 16 [[0, 1], [1, 0]] ) (5 (2, 12) (2x2) 17 [[1, 0], [0, 1]] ) (2 (2, 12) (2x2) 18 [[0, 1], [1, 0]] ) (3 (3, 8) (2x2) 24 [[0, 1], [1, 0]] ) (3 (3, 13) (2x2) 25 [[0, 1], [1, 0]] ) (4 (3, 16) (2x2) 26 [[1, 0], [0, 1]] ) (3 (6, 1) (2x2) 36 [[0, 1], [1, 0]] ) (4 (6, 3) (2x2) 37 [[1, 0], [0, 1]] ) (3 (6, 6) (2x2) 40 [[0, 1], [1, 0]] ) (4 (6, 8) (2x2) 41 [[1, 0], [0, 1]] ) (3 (6, 16) (2x2) 45 [[0, 1], [1, 0]] ) (5 (7, 2) (2x2) 46 [[1, 0], [0, 1]] ) (2 (7, 2) (2x2) 47 [[0, 1], [1, 0]] ) (5 (7, 7) (2x2) 48 [[1, 0], [0, 1]] ) (2 (7, 7) (2x2) 49 [[0, 1], [1, 0]] ) (5 (7, 12) (2x2) 51 [[1, 0], [0, 1]] ) (2 (7, 12) (2x2) 52 [[0, 1], [1, 0]] ) (4 (8, 1) (2x2) 55 [[1, 0], [0, 1]] ) (3 (8, 3) (2x2) 56 [[0, 1], [1, 0]] ) (4 (8, 6) (2x2) 57 [[1, 0], [0, 1]] ) (3 (8, 8) (2x2) 58 [[0, 1], [1, 0]] ) (4 (8, 11) (2x2) 59 [[1, 0], [0, 1]] ) (3 (8, 13) (2x2) 60 [[0, 1], [1, 0]] ) (4 (8, 16) (2x2) 61 [[1, 0], [0, 1]] ) (3 (11, 6) (2x2) 72 [[0, 1], [1, 0]] ) (4 (11, 8) (2x2) 73 [[1, 0], [0, 1]] ) (3 (11, 11) (2x2) 76 [[0, 1], [1, 0]] ) (4 (11, 13) (2x2) 77 [[1, 0], [0, 1]] ) (3 (11, 16) (2x2) 80 [[0, 1], [1, 0]] ) (5 (12, 7) (2x2) 82 [[1, 0], [0, 1]] ) (2 (12, 7) (2x2) 83 [[0, 1], [1, 0]] ) (5 (12, 12) (2x2) 84 [[1, 0], [0, 1]] ) (2 (12, 12) (2x2) 85 [[0, 1], [1, 0]] ) (4 (13, 1) (2x2) 87 [[1, 0], [0, 1]] ) (3 (13, 3) (2x2) 90 [[0, 1], [1, 0]] ) (4 (13, 6) (2x2) 91 [[1, 0], [0, 1]] ) (3 (13, 8) (2x2) 92 [[0, 1], [1, 0]] ) (4 (13, 11) (2x2) 93 [[1, 0], [0, 1]] ) (3 (13, 13) (2x2) 94 [[0, 1], [1, 0]] ) (4 (13, 16) (2x2) 95 [[1, 0], [0, 1]] ) (3 (16, 1) (2x2) 105 [[0, 1], [1, 0]] ) (4 (16, 3) (2x2) 106 [[1, 0], [0, 1]] ) (3 (16, 6) (2x2) 109 [[0, 1], [1, 0]] ) (4 (16, 8) (2x2) 110 [[1, 0], [0, 1]] ) (3 (16, 11) (2x2) 113 [[0, 1], [1, 0]] ) (4 (16, 13) (2x2) 114 [[1, 0], [0, 1]] ) (3 (16, 16) (2x2) 117 [[0, 1], [1, 0]] )))
Output tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (5 (1, 4) (1x1) 5 [[1]] ) (5 (4, 1) (1x1) 31 [[1]] ) (2 (4, 4) (1x1) 32 [[1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (4 (1, 3) (2x2) 4 [[1, 0], [0, 1]] ) (5 (2, 2) (2x2) 16 [[1, 0], [0, 1]] ) (2 (2, 2) (2x2) 17 [[0, 1], [1, 0]] ) (4 (3, 1) (2x2) 23 [[1, 0], [0, 1]] ) (3 (3, 3) (2x2) 24 [[0, 1], [1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0]] (2 (1, 6) (1x1) 6 [[1]] ) (5 (1, 9) (1x1) 9 [[1]] ) (2 (1, 11) (1x1) 10 [[1]] ) (5 (1, 14) (1x1) 13 [[1]] ) (2 (1, 16) (1x1) 14 [[1]] ) (5 (2, 17) (1x1) 22 [[1]] ) (2 (3, 17) (1x1) 30 [[1]] ) (5 (4, 6) (1x1) 33 [[1]] ) (2 (4, 9) (1x1) 34 [[1]] ) (5 (4, 11) (1x1) 35 [[1]] ) (2 (4, 14) (1x1) 36 [[1]] ) (5 (4, 16) (1x1) 37 [[1]] ) (2 (6, 1) (1x1) 38 [[1]] ) (5 (6, 4) (1x1) 41 [[1]] ) (2 (6, 6) (1x1) 42 [[1]] ) (5 (6, 9) (1x1) 45 [[1]] ) (2 (6, 11) (1x1) 46 [[1]] ) (5 (6, 14) (1x1) 49 [[1]] ) (2 (6, 16) (1x1) 50 [[1]] ) (5 (7, 17) (1x1) 58 [[1]] ) (2 (8, 17) (1x1) 66 [[1]] ) (5 (9, 1) (1x1) 67 [[1]] ) (2 (9, 4) (1x1) 68 [[1]] ) (5 (9, 6) (1x1) 69 [[1]] ) (2 (9, 9) (1x1) 70 [[1]] ) (5 (9, 11) (1x1) 71 [[1]] ) (2 (9, 14) (1x1) 72 [[1]] ) (5 (9, 16) (1x1) 73 [[1]] ) (2 (11, 1) (1x1) 74 [[1]] ) (5 (11, 4) (1x1) 77 [[1]] ) (2 (11, 6) (1x1) 78 [[1]] ) (5 (11, 9) (1x1) 81 [[1]] ) (2 (11, 11) (1x1) 82 [[1]] ) (5 (11, 14) (1x1) 85 [[1]] ) (2 (11, 16) (1x1) 86 [[1]] ) (5 (12, 17) (1x1) 94 [[1]] ) (2 (13, 17) (1x1) 102 [[1]] ) (5 (14, 1) (1x1) 103 [[1]] ) (2 (14, 4) (1x1) 104 [[1]] ) (5 (14, 6) (1x1) 105 [[1]] ) (2 (14, 9) (1x1) 106 [[1]] ) (5 (14, 11) (1x1) 107 [[1]] ) (2 (14, 14) (1x1) 108 [[1]] ) (5 (14, 16) (1x1) 109 [[1]] ) (2 (16, 1) (1x1) 110 [[1]] ) (5 (16, 4) (1x1) 113 [[1]] ) (2 (16, 6) (1x1) 114 [[1]] ) (5 (16, 9) (1x1) 117 [[1]] ) (2 (16, 11) (1x1) 118 [[1]] ) (5 (16, 14) (1x1) 121 [[1]] ) (2 (16, 16) (1x1) 122 [[1]] ) (5 (17, 2) (1x1) 124 [[1]] ) (2 (17, 3) (1x1) 125 [[1]] ) (5 (17, 7) (1x1) 126 [[1]] ) (2 (17, 8) (1x1) 127 [[1]] ) (5 (17, 12) (1x1) 128 [[1]] ) (2 (17, 13) (1x1) 129 [[1]] ) (5 (17, 17) (1x1) 130 [[1]] ) (3 (1, 6) (2x2) 7 [[0, 1], [1, 0]] ) (4 (1, 8) (2x2) 8 [[1, 0], [0, 1]] ) (3 (1, 11) (2x2) 11 [[0, 1], [1, 0]] ) (4 (1, 13) (2x2) 12 [[1, 0], [0, 1]] ) (3 (1, 16) (2x2) 15 [[0, 1], [1, 0]] ) (5 (2, 7) (2x2) 18 [[1, 0], [0, 1]] ) (2 (2, 7) (2x2) 19 [[0, 1], [1, 0]] ) (5 (2, 12) (2x2) 20 [[1, 0], [0, 1]] ) (2 (2, 12) (2x2) 21 [[0, 1], [1, 0]] ) (4 (3, 6) (2x2) 25 [[1, 0], [0, 1]] ) (3 (3, 8) (2x2) 26 [[0, 1], [1, 0]] ) (4 (3, 11) (2x2) 27 [[1, 0], [0, 1]] ) (3 (3, 13) (2x2) 28 [[0, 1], [1, 0]] ) (4 (3, 16) (2x2) 29 [[1, 0], [0, 1]] ) (3 (6, 1) (2x2) 39 [[0, 1], [1, 0]] ) (4 (6, 3) (2x2) 40 [[1, 0], [0, 1]] ) (3 (6, 6) (2x2) 43 [[0, 1], [1, 0]] ) (4 (6, 8) (2x2) 44 [[1, 0], [0, 1]] ) (3 (6, 11) (2x2) 47 [[0, 1], [1, 0]] ) (4 (6, 13) (2x2) 48 [[1, 0], [0, 1]] ) (3 (6, 16) (2x2) 51 [[0, 1], [1, 0]] ) (5 (7, 2) (2x2) 52 [[1, 0], [0, 1]] ) (2 (7, 2) (2x2) 53 [[0, 1], [1, 0]] ) (5 (7, 7) (2x2) 54 [[1, 0], [0, 1]] ) (2 (7, 7) (2x2) 55 [[0, 1], [1, 0]] ) (5 (7, 12) (2x2) 56 [[1, 0], [0, 1]] ) (2 (7, 12) (2x2) 57 [[0, 1], [1, 0]] ) (4 (8, 1) (2x2) 59 [[1, 0], [0, 1]] ) (3 (8, 3) (2x2) 60 [[0, 1], [1, 0]] ) (4 (8, 6) (2x2) 61 [[1, 0], [0, 1]] ) (3 (8, 8) (2x2) 62 [[0, 1], [1, 0]] ) (4 (8, 11) (2x2) 63 [[1, 0], [0, 1]] ) (3 (8, 13) (2x2) 64 [[0, 1], [1, 0]] ) (4 (8, 16) (2x2) 65 [[1, 0], [0, 1]] ) (3 (11, 1) (2x2) 75 [[0, 1], [1, 0]] ) (4 (11, 3) (2x2) 76 [[1, 0], [0, 1]] ) (3 (11, 6) (2x2) 79 [[0, 1], [1, 0]] ) (4 (11, 8) (2x2) 80 [[1, 0], [0, 1]] ) (3 (11, 11) (2x2) 83 [[0, 1], [1, 0]] ) (4 (11, 13) (2x2) 84 [[1, 0], [0, 1]] ) (3 (11, 16) (2x2) 87 [[0, 1], [1, 0]] ) (5 (12, 2) (2x2) 88 [[1, 0], [0, 1]] ) (2 (12, 2) (2x2) 89 [[0, 1], [1, 0]] ) (5 (12, 7) (2x2) 90 [[1, 0], [0, 1]] ) (2 (12, 7) (2x2) 91 [[0, 1], [1, 0]] ) (5 (12, 12) (2x2) 92 [[1, 0], [0, 1]] ) (2 (12, 12) (2x2) 93 [[0, 1], [1, 0]] ) (4 (13, 1) (2x2) 95 [[1, 0], [0, 1]] ) (3 (13, 3) (2x2) 96 [[0, 1], [1, 0]] ) (4 (13, 6) (2x2) 97 [[1, 0], [0, 1]] ) (3 (13, 8) (2x2) 98 [[0, 1], [1, 0]] ) (4 (13, 11) (2x2) 99 [[1, 0], [0, 1]] ) (3 (13, 13) (2x2) 100 [[0, 1], [1, 0]] ) (4 (13, 16) (2x2) 101 [[1, 0], [0, 1]] ) (3 (16, 1) (2x2) 111 [[0, 1], [1, 0]] ) (4 (16, 3) (2x2) 112 [[1, 0], [0, 1]] ) (3 (16, 6) (2x2) 115 [[0, 1], [1, 0]] ) (4 (16, 8) (2x2) 116 [[1, 0], [0, 1]] ) (3 (16, 11) (2x2) 119 [[0, 1], [1, 0]] ) (4 (16, 13) (2x2) 120 [[1, 0], [0, 1]] ) (3 (16, 16) (2x2) 123 [[0, 1], [1, 0]] )))

Train Example 1
Input Tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 3 [[1]] ) (4 (1, 3) (1x1) 5 [[1]] ) (6 (1, 5) (1x1) 7 [[1]] ) (6 (1, 11) (1x1) 9 [[1]] ) (2 (1, 13) (1x1) 10 [[1]] ) (4 (1, 15) (1x1) 12 [[1]] ) (6 (1, 17) (1x1) 14 [[1]] ) (5 (2, 2) (1x1) 15 [[1]] ) (3 (2, 4) (1x1) 17 [[1]] ) (3 (2, 10) (1x1) 18 [[1]] ) (5 (2, 14) (1x1) 19 [[1]] ) (3 (2, 16) (1x1) 21 [[1]] ) (4 (3, 1) (1x1) 22 [[1]] ) (4 (3, 3) (1x1) 23 [[1]] ) (4 (3, 5) (1x1) 24 [[1]] ) (4 (3, 11) (1x1) 26 [[1]] ) (4 (3, 13) (1x1) 27 [[1]] ) (4 (3, 15) (1x1) 28 [[1]] ) (4 (3, 17) (1x1) 29 [[1]] ) (3 (4, 2) (1x1) 31 [[1]] ) (5 (4, 4) (1x1) 32 [[1]] ) (3 (4, 5) (1x1) 33 [[1]] ) (3 (4, 8) (1x1) 35 [[1]] ) (5 (4, 10) (1x1) 36 [[1]] ) (3 (4, 14) (1x1) 37 [[1]] ) (5 (4, 16) (1x1) 38 [[1]] ) (6 (5, 1) (1x1) 40 [[1]] ) (6 (5, 7) (1x1) 41 [[1]] ) (4 (5, 9) (1x1) 42 [[1]] ) (3 (5, 10) (1x1) 43 [[1]] ) (5 (5, 14) (1x1) 44 [[1]] ) (4 (5, 15) (1x1) 45 [[1]] ) (2 (5, 17) (1x1) 46 [[1]] ) (2 (7, 1) (1x1) 48 [[1]] ) (2 (7, 7) (1x1) 50 [[1]] ) (4 (7, 9) (1x1) 52 [[1]] ) (6 (7, 11) (1x1) 54 [[1]] ) (2 (7, 13) (1x1) 55 [[1]] ) (4 (7, 15) (1x1) 57 [[1]] ) (6 (7, 17) (1x1) 59 [[1]] ) (5 (8, 2) (1x1) 60 [[1]] ) (3 (8, 4) (1x1) 62 [[1]] ) (5 (8, 5) (1x1) 63 [[1]] ) (5 (8, 8) (1x1) 64 [[1]] ) (3 (8, 10) (1x1) 66 [[1]] ) (5 (8, 14) (1x1) 67 [[1]] ) (3 (8, 16) (1x1) 69 [[1]] ) (4 (9, 1) (1x1) 70 [[1]] ) (4 (9, 3) (1x1) 71 [[1]] ) (4 (9, 5) (1x1) 72 [[1]] ) (4 (9, 7) (1x1) 73 [[1]] ) (4 (9, 9) (1x1) 74 [[1]] ) (4 (9, 11) (1x1) 75 [[1]] ) (4 (9, 13) (1x1) 76 [[1]] ) (4 (9, 15) (1x1) 77 [[1]] ) (4 (9, 17) (1x1) 78 [[1]] ) (3 (10, 2) (1x1) 80 [[1]] ) (5 (10, 4) (1x1) 81 [[1]] ) (5 (10, 7) (1x1) 83 [[1]] ) (3 (10, 8) (1x1) 84 [[1]] ) (5 (10, 10) (1x1) 85 [[1]] ) (5 (10, 13) (1x1) 87 [[1]] ) (3 (10, 14) (1x1) 88 [[1]] ) (5 (10, 16) (1x1) 89 [[1]] ) (6 (11, 1) (1x1) 91 [[1]] ) (4 (11, 3) (1x1) 92 [[1]] ) (2 (11, 5) (1x1) 93 [[1]] ) (2 (11, 11) (1x1) 94 [[1]] ) (2 (11, 17) (1x1) 95 [[1]] ) (6 (13, 11) (1x1) 104 [[1]] ) (6 (13, 17) (1x1) 106 [[1]] ) (3 (14, 7) (1x1) 110 [[1]] ) (5 (14, 8) (1x1) 111 [[1]] ) (3 (14, 10) (1x1) 113 [[1]] ) (3 (14, 13) (1x1) 115 [[1]] ) (5 (14, 14) (1x1) 116 [[1]] ) (3 (14, 16) (1x1) 118 [[1]] ) (4 (15, 7) (1x1) 122 [[1]] ) (4 (15, 9) (1x1) 123 [[1]] ) (4 (15, 11) (1x1) 124 [[1]] ) (4 (15, 13) (1x1) 125 [[1]] ) (4 (15, 15) (1x1) 126 [[1]] ) (4 (15, 17) (1x1) 127 [[1]] ) (3 (16, 8) (1x1) 133 [[1]] ) (5 (16, 10) (1x1) 134 [[1]] ) (3 (16, 14) (1x1) 137 [[1]] ) (5 (16, 16) (1x1) 138 [[1]] ) (6 (17, 7) (1x1) 143 [[1]] ) (4 (17, 9) (1x1) 144 [[1]] ) (2 (17, 11) (1x1) 145 [[1]] ) (6 (17, 13) (1x1) 146 [[1]] ) (4 (17, 15) (1x1) 147 [[1]] ) (2 (17, 17) (1x1) 148 [[1]] ) (1 (12, 10) (1x2) 96 [[1, 1]] ) (1 (12, 16) (1x2) 97 [[1, 1]] ) (3 (1, 1) (2x2) 4 [[0, 1], [1, 0]] ) (5 (1, 4) (2x2) 6 [[1, 0], [0, 1]] ) (5 (1, 10) (2x2) 8 [[1, 0], [0, 1]] ) (3 (1, 13) (2x2) 11 [[0, 1], [1, 0]] ) (5 (1, 16) (2x2) 13 [[1, 0], [0, 1]] ) (1 (3, 9) (2x2) 25 [[0, 1], [1, 0]] ) (5 (4, 1) (2x2) 30 [[1, 0], [0, 1]] ) (5 (4, 7) (2x2) 34 [[1, 0], [0, 1]] ) (3 (4, 16) (2x2) 39 [[0, 1], [1, 0]] ) (3 (7, 1) (2x2) 49 [[0, 1], [1, 0]] ) (3 (7, 7) (2x2) 51 [[0, 1], [1, 0]] ) (5 (7, 10) (2x2) 53 [[1, 0], [0, 1]] ) (3 (7, 13) (2x2) 56 [[0, 1], [1, 0]] ) (5 (7, 16) (2x2) 58 [[1, 0], [0, 1]] ) (5 (10, 1) (2x2) 79 [[1, 0], [0, 1]] ) (3 (10, 4) (2x2) 82 [[0, 1], [1, 0]] ) (3 (10, 10) (2x2) 86 [[0, 1], [1, 0]] ) (3 (10, 16) (2x2) 90 [[0, 1], [1, 0]] ) (5 (13, 10) (2x2) 103 [[1, 0], [0, 1]] ) (5 (13, 16) (2x2) 105 [[1, 0], [0, 1]] ) (1 (14, 12) (4x1) 114 [[1], [1], [1], [1]] ) (5 (16, 7) (2x2) 132 [[1, 0], [0, 1]] ) (3 (16, 10) (2x2) 135 [[0, 1], [1, 0]] ) (5 (16, 13) (2x2) 136 [[1, 0], [0, 1]] ) (3 (16, 16) (2x2) 139 [[0, 1], [1, 0]] ) (1 (2, 2) (3x3) 16 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (2, 14) (3x3) 20 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (8, 2) (3x3) 61 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (8, 8) (3x3) 65 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (8, 14) (3x3) 68 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (14, 8) (3x3) 112 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (14, 14) (3x3) 117 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (0, 10) (4x8) 2 [[1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0]] ) (1 (6, 7) (5x11) 47 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]] ) (1 (0, 0) (18x7) 1 [[1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1]] (2 (13, 1) (1x1) 98 [[1]] ) (4 (13, 3) (1x1) 100 [[1]] ) (6 (13, 5) (1x1) 102 [[1]] ) (5 (14, 2) (1x1) 107 [[1]] ) (3 (14, 4) (1x1) 109 [[1]] ) (4 (15, 1) (1x1) 119 [[1]] ) (4 (15, 3) (1x1) 120 [[1]] ) (4 (15, 5) (1x1) 121 [[1]] ) (3 (16, 2) (1x1) 129 [[1]] ) (5 (16, 4) (1x1) 130 [[1]] ) (6 (17, 1) (1x1) 140 [[1]] ) (4 (17, 3) (1x1) 141 [[1]] ) (2 (17, 5) (1x1) 142 [[1]] ) (3 (13, 1) (2x2) 99 [[0, 1], [1, 0]] ) (5 (13, 4) (2x2) 101 [[1, 0], [0, 1]] ) (5 (16, 1) (2x2) 128 [[1, 0], [0, 1]] ) (3 (16, 4) (2x2) 131 [[0, 1], [1, 0]] ) (1 (14, 2) (3x3) 108 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] )))
Output tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (4 (1, 3) (1x1) 4 [[1]] ) (6 (1, 5) (1x1) 6 [[1]] ) (5 (2, 2) (1x1) 17 [[1]] ) (3 (2, 4) (1x1) 19 [[1]] ) (4 (3, 1) (1x1) 26 [[1]] ) (4 (3, 3) (1x1) 27 [[1]] ) (4 (3, 5) (1x1) 28 [[1]] ) (3 (4, 2) (1x1) 36 [[1]] ) (5 (4, 4) (1x1) 37 [[1]] ) (6 (5, 1) (1x1) 47 [[1]] ) (4 (5, 3) (1x1) 48 [[1]] ) (2 (5, 5) (1x1) 49 [[1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (5 (1, 4) (2x2) 5 [[1, 0], [0, 1]] ) (5 (4, 1) (2x2) 35 [[1, 0], [0, 1]] ) (3 (4, 4) (2x2) 38 [[0, 1], [1, 0]] ) (1 (2, 2) (3x3) 18 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]] (2 (1, 7) (1x1) 7 [[1]] ) (4 (1, 9) (1x1) 9 [[1]] ) (6 (1, 11) (1x1) 11 [[1]] ) (2 (1, 13) (1x1) 12 [[1]] ) (4 (1, 15) (1x1) 14 [[1]] ) (6 (1, 17) (1x1) 16 [[1]] ) (5 (2, 8) (1x1) 20 [[1]] ) (3 (2, 10) (1x1) 22 [[1]] ) (5 (2, 14) (1x1) 23 [[1]] ) (3 (2, 16) (1x1) 25 [[1]] ) (4 (3, 7) (1x1) 29 [[1]] ) (4 (3, 9) (1x1) 30 [[1]] ) (4 (3, 11) (1x1) 31 [[1]] ) (4 (3, 13) (1x1) 32 [[1]] ) (4 (3, 15) (1x1) 33 [[1]] ) (4 (3, 17) (1x1) 34 [[1]] ) (3 (4, 8) (1x1) 40 [[1]] ) (5 (4, 10) (1x1) 41 [[1]] ) (3 (4, 14) (1x1) 44 [[1]] ) (5 (4, 16) (1x1) 45 [[1]] ) (6 (5, 7) (1x1) 50 [[1]] ) (4 (5, 9) (1x1) 51 [[1]] ) (2 (5, 11) (1x1) 52 [[1]] ) (6 (5, 13) (1x1) 53 [[1]] ) (4 (5, 15) (1x1) 54 [[1]] ) (2 (5, 17) (1x1) 55 [[1]] ) (2 (7, 1) (1x1) 56 [[1]] ) (4 (7, 3) (1x1) 58 [[1]] ) (6 (7, 5) (1x1) 60 [[1]] ) (2 (7, 7) (1x1) 61 [[1]] ) (4 (7, 9) (1x1) 63 [[1]] ) (6 (7, 11) (1x1) 65 [[1]] ) (2 (7, 13) (1x1) 66 [[1]] ) (4 (7, 15) (1x1) 68 [[1]] ) (6 (7, 17) (1x1) 70 [[1]] ) (5 (8, 2) (1x1) 71 [[1]] ) (3 (8, 4) (1x1) 73 [[1]] ) (5 (8, 8) (1x1) 74 [[1]] ) (3 (8, 10) (1x1) 76 [[1]] ) (5 (8, 14) (1x1) 77 [[1]] ) (3 (8, 16) (1x1) 79 [[1]] ) (4 (9, 1) (1x1) 80 [[1]] ) (4 (9, 3) (1x1) 81 [[1]] ) (4 (9, 5) (1x1) 82 [[1]] ) (4 (9, 7) (1x1) 83 [[1]] ) (4 (9, 9) (1x1) 84 [[1]] ) (4 (9, 11) (1x1) 85 [[1]] ) (4 (9, 13) (1x1) 86 [[1]] ) (4 (9, 15) (1x1) 87 [[1]] ) (4 (9, 17) (1x1) 88 [[1]] ) (3 (10, 2) (1x1) 90 [[1]] ) (5 (10, 4) (1x1) 91 [[1]] ) (3 (10, 8) (1x1) 94 [[1]] ) (5 (10, 10) (1x1) 95 [[1]] ) (3 (10, 14) (1x1) 98 [[1]] ) (5 (10, 16) (1x1) 99 [[1]] ) (6 (11, 1) (1x1) 101 [[1]] ) (4 (11, 3) (1x1) 102 [[1]] ) (2 (11, 5) (1x1) 103 [[1]] ) (6 (11, 7) (1x1) 104 [[1]] ) (4 (11, 9) (1x1) 105 [[1]] ) (2 (11, 11) (1x1) 106 [[1]] ) (6 (11, 13) (1x1) 107 [[1]] ) (4 (11, 15) (1x1) 108 [[1]] ) (2 (11, 17) (1x1) 109 [[1]] ) (2 (13, 1) (1x1) 110 [[1]] ) (4 (13, 3) (1x1) 112 [[1]] ) (6 (13, 5) (1x1) 114 [[1]] ) (2 (13, 7) (1x1) 115 [[1]] ) (4 (13, 9) (1x1) 117 [[1]] ) (6 (13, 11) (1x1) 119 [[1]] ) (2 (13, 13) (1x1) 120 [[1]] ) (4 (13, 15) (1x1) 122 [[1]] ) (6 (13, 17) (1x1) 124 [[1]] ) (5 (14, 2) (1x1) 125 [[1]] ) (3 (14, 4) (1x1) 127 [[1]] ) (5 (14, 8) (1x1) 128 [[1]] ) (3 (14, 10) (1x1) 130 [[1]] ) (5 (14, 14) (1x1) 131 [[1]] ) (3 (14, 16) (1x1) 133 [[1]] ) (4 (15, 1) (1x1) 134 [[1]] ) (4 (15, 3) (1x1) 135 [[1]] ) (4 (15, 5) (1x1) 136 [[1]] ) (4 (15, 7) (1x1) 137 [[1]] ) (4 (15, 9) (1x1) 138 [[1]] ) (4 (15, 11) (1x1) 139 [[1]] ) (4 (15, 13) (1x1) 140 [[1]] ) (4 (15, 15) (1x1) 141 [[1]] ) (4 (15, 17) (1x1) 142 [[1]] ) (3 (16, 2) (1x1) 144 [[1]] ) (5 (16, 4) (1x1) 145 [[1]] ) (3 (16, 8) (1x1) 148 [[1]] ) (5 (16, 10) (1x1) 149 [[1]] ) (3 (16, 14) (1x1) 152 [[1]] ) (5 (16, 16) (1x1) 153 [[1]] ) (6 (17, 1) (1x1) 155 [[1]] ) (4 (17, 3) (1x1) 156 [[1]] ) (2 (17, 5) (1x1) 157 [[1]] ) (6 (17, 7) (1x1) 158 [[1]] ) (4 (17, 9) (1x1) 159 [[1]] ) (2 (17, 11) (1x1) 160 [[1]] ) (6 (17, 13) (1x1) 161 [[1]] ) (4 (17, 15) (1x1) 162 [[1]] ) (2 (17, 17) (1x1) 163 [[1]] ) (3 (1, 7) (2x2) 8 [[0, 1], [1, 0]] ) (5 (1, 10) (2x2) 10 [[1, 0], [0, 1]] ) (3 (1, 13) (2x2) 13 [[0, 1], [1, 0]] ) (5 (1, 16) (2x2) 15 [[1, 0], [0, 1]] ) (5 (4, 7) (2x2) 39 [[1, 0], [0, 1]] ) (3 (4, 10) (2x2) 42 [[0, 1], [1, 0]] ) (5 (4, 13) (2x2) 43 [[1, 0], [0, 1]] ) (3 (4, 16) (2x2) 46 [[0, 1], [1, 0]] ) (3 (7, 1) (2x2) 57 [[0, 1], [1, 0]] ) (5 (7, 4) (2x2) 59 [[1, 0], [0, 1]] ) (3 (7, 7) (2x2) 62 [[0, 1], [1, 0]] ) (5 (7, 10) (2x2) 64 [[1, 0], [0, 1]] ) (3 (7, 13) (2x2) 67 [[0, 1], [1, 0]] ) (5 (7, 16) (2x2) 69 [[1, 0], [0, 1]] ) (5 (10, 1) (2x2) 89 [[1, 0], [0, 1]] ) (3 (10, 4) (2x2) 92 [[0, 1], [1, 0]] ) (5 (10, 7) (2x2) 93 [[1, 0], [0, 1]] ) (3 (10, 10) (2x2) 96 [[0, 1], [1, 0]] ) (5 (10, 13) (2x2) 97 [[1, 0], [0, 1]] ) (3 (10, 16) (2x2) 100 [[0, 1], [1, 0]] ) (3 (13, 1) (2x2) 111 [[0, 1], [1, 0]] ) (5 (13, 4) (2x2) 113 [[1, 0], [0, 1]] ) (3 (13, 7) (2x2) 116 [[0, 1], [1, 0]] ) (5 (13, 10) (2x2) 118 [[1, 0], [0, 1]] ) (3 (13, 13) (2x2) 121 [[0, 1], [1, 0]] ) (5 (13, 16) (2x2) 123 [[1, 0], [0, 1]] ) (5 (16, 1) (2x2) 143 [[1, 0], [0, 1]] ) (3 (16, 4) (2x2) 146 [[0, 1], [1, 0]] ) (5 (16, 7) (2x2) 147 [[1, 0], [0, 1]] ) (3 (16, 10) (2x2) 150 [[0, 1], [1, 0]] ) (5 (16, 13) (2x2) 151 [[1, 0], [0, 1]] ) (3 (16, 16) (2x2) 154 [[0, 1], [1, 0]] ) (1 (2, 8) (3x3) 21 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (2, 14) (3x3) 24 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (8, 2) (3x3) 72 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (8, 8) (3x3) 75 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (8, 14) (3x3) 78 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (14, 2) (3x3) 126 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (14, 8) (3x3) 129 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (14, 14) (3x3) 132 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] )))

Train Example 2
Input Tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (4 (1, 3) (1x1) 4 [[1]] ) (5 (1, 4) (1x1) 5 [[1]] ) (7 (1, 6) (1x1) 7 [[1]] ) (2 (1, 8) (1x1) 8 [[1]] ) (4 (1, 10) (1x1) 10 [[1]] ) (5 (1, 11) (1x1) 11 [[1]] ) (6 (1, 12) (1x1) 12 [[1]] ) (7 (1, 13) (1x1) 13 [[1]] ) (2 (1, 15) (1x1) 14 [[1]] ) (3 (1, 16) (1x1) 15 [[1]] ) (4 (1, 17) (1x1) 16 [[1]] ) (5 (2, 2) (1x1) 17 [[1]] ) (4 (2, 5) (1x1) 20 [[1]] ) (5 (2, 9) (1x1) 21 [[1]] ) (7 (2, 10) (1x1) 22 [[1]] ) (2 (2, 11) (1x1) 23 [[1]] ) (5 (2, 16) (1x1) 24 [[1]] ) (4 (3, 1) (1x1) 26 [[1]] ) (3 (3, 17) (1x1) 29 [[1]] ) (5 (4, 1) (1x1) 30 [[1]] ) (6 (4, 17) (1x1) 34 [[1]] ) (5 (5, 5) (1x1) 35 [[1]] ) (2 (5, 10) (1x1) 36 [[1]] ) (7 (5, 11) (1x1) 37 [[1]] ) (4 (5, 16) (1x1) 38 [[1]] ) (5 (6, 3) (1x1) 39 [[1]] ) (4 (6, 4) (1x1) 40 [[1]] ) (3 (6, 5) (1x1) 41 [[1]] ) (5 (6, 10) (1x1) 42 [[1]] ) (4 (6, 11) (1x1) 43 [[1]] ) (3 (6, 12) (1x1) 44 [[1]] ) (6 (6, 16) (1x1) 45 [[1]] ) (5 (6, 17) (1x1) 46 [[1]] ) (4 (8, 3) (1x1) 48 [[1]] ) (5 (8, 4) (1x1) 49 [[1]] ) (7 (8, 6) (1x1) 51 [[1]] ) (2 (8, 8) (1x1) 52 [[1]] ) (4 (8, 10) (1x1) 54 [[1]] ) (5 (8, 11) (1x1) 55 [[1]] ) (7 (8, 13) (1x1) 57 [[1]] ) (2 (8, 15) (1x1) 58 [[1]] ) (4 (8, 17) (1x1) 60 [[1]] ) (3 (9, 1) (1x1) 61 [[1]] ) (5 (9, 2) (1x1) 62 [[1]] ) (4 (9, 5) (1x1) 65 [[1]] ) (5 (9, 9) (1x1) 66 [[1]] ) (4 (9, 12) (1x1) 69 [[1]] ) (5 (9, 16) (1x1) 70 [[1]] ) (4 (10, 1) (1x1) 72 [[1]] ) (5 (10, 6) (1x1) 75 [[1]] ) (4 (10, 8) (1x1) 76 [[1]] ) (5 (10, 13) (1x1) 79 [[1]] ) (4 (10, 15) (1x1) 80 [[1]] ) (3 (10, 17) (1x1) 81 [[1]] ) (5 (11, 1) (1x1) 82 [[1]] ) (4 (11, 6) (1x1) 85 [[1]] ) (5 (11, 8) (1x1) 86 [[1]] ) (4 (11, 13) (1x1) 89 [[1]] ) (5 (11, 15) (1x1) 90 [[1]] ) (6 (11, 17) (1x1) 92 [[1]] ) (4 (12, 2) (1x1) 94 [[1]] ) (5 (12, 5) (1x1) 95 [[1]] ) (4 (12, 9) (1x1) 98 [[1]] ) (5 (12, 12) (1x1) 99 [[1]] ) (4 (12, 16) (1x1) 102 [[1]] ) (7 (13, 1) (1x1) 103 [[1]] ) (5 (13, 3) (1x1) 104 [[1]] ) (4 (13, 4) (1x1) 105 [[1]] ) (2 (13, 6) (1x1) 106 [[1]] ) (7 (13, 8) (1x1) 107 [[1]] ) (5 (13, 10) (1x1) 108 [[1]] ) (4 (13, 11) (1x1) 109 [[1]] ) (2 (13, 13) (1x1) 110 [[1]] ) (7 (13, 15) (1x1) 111 [[1]] ) (5 (13, 17) (1x1) 112 [[1]] ) (1 (7, 16) (1x2) 47 [[1, 1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (6 (1, 5) (2x2) 6 [[1, 0], [0, 1]] ) (3 (1, 8) (2x2) 9 [[0, 1], [1, 0]] ) (7 (2, 2) (2x2) 18 [[0, 1], [1, 0]] ) (2 (2, 4) (2x2) 19 [[1, 0], [0, 1]] ) (7 (2, 16) (2x2) 25 [[0, 1], [1, 0]] ) (3 (3, 3) (2x2) 27 [[1, 0], [0, 1]] ) (6 (3, 3) (2x2) 28 [[0, 1], [1, 0]] ) (2 (4, 2) (2x2) 31 [[1, 0], [0, 1]] ) (7 (4, 4) (2x2) 32 [[0, 1], [1, 0]] ) (2 (4, 16) (2x2) 33 [[1, 0], [0, 1]] ) (6 (8, 5) (2x2) 50 [[1, 0], [0, 1]] ) (3 (8, 8) (2x2) 53 [[0, 1], [1, 0]] ) (6 (8, 12) (2x2) 56 [[1, 0], [0, 1]] ) (3 (8, 15) (2x2) 59 [[0, 1], [1, 0]] ) (7 (9, 2) (2x2) 63 [[0, 1], [1, 0]] ) (2 (9, 4) (2x2) 64 [[1, 0], [0, 1]] ) (7 (9, 9) (2x2) 67 [[0, 1], [1, 0]] ) (2 (9, 11) (2x2) 68 [[1, 0], [0, 1]] ) (7 (9, 16) (2x2) 71 [[0, 1], [1, 0]] ) (3 (10, 3) (2x2) 73 [[1, 0], [0, 1]] ) (6 (10, 3) (2x2) 74 [[0, 1], [1, 0]] ) (3 (10, 10) (2x2) 77 [[1, 0], [0, 1]] ) (6 (10, 10) (2x2) 78 [[0, 1], [1, 0]] ) (2 (11, 2) (2x2) 83 [[1, 0], [0, 1]] ) (7 (11, 4) (2x2) 84 [[0, 1], [1, 0]] ) (2 (11, 9) (2x2) 87 [[1, 0], [0, 1]] ) (7 (11, 11) (2x2) 88 [[0, 1], [1, 0]] ) (2 (11, 16) (2x2) 91 [[1, 0], [0, 1]] ) (6 (12, 1) (2x2) 93 [[1, 0], [0, 1]] ) (3 (12, 5) (2x2) 96 [[0, 1], [1, 0]] ) (6 (12, 8) (2x2) 97 [[1, 0], [0, 1]] ) (3 (12, 12) (2x2) 100 [[0, 1], [1, 0]] ) (6 (12, 15) (2x2) 101 [[1, 0], [0, 1]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]] (2 (15, 1) (1x1) 113 [[1]] ) (4 (15, 3) (1x1) 115 [[1]] ) (5 (15, 4) (1x1) 116 [[1]] ) (7 (15, 6) (1x1) 118 [[1]] ) (2 (15, 8) (1x1) 119 [[1]] ) (4 (15, 10) (1x1) 121 [[1]] ) (5 (15, 11) (1x1) 122 [[1]] ) (7 (15, 13) (1x1) 124 [[1]] ) (2 (15, 15) (1x1) 125 [[1]] ) (4 (15, 17) (1x1) 127 [[1]] ) (5 (16, 2) (1x1) 128 [[1]] ) (4 (16, 5) (1x1) 131 [[1]] ) (5 (16, 9) (1x1) 132 [[1]] ) (4 (16, 12) (1x1) 135 [[1]] ) (5 (16, 16) (1x1) 136 [[1]] ) (4 (17, 1) (1x1) 138 [[1]] ) (3 (17, 3) (1x1) 139 [[1]] ) (6 (17, 4) (1x1) 140 [[1]] ) (5 (17, 6) (1x1) 141 [[1]] ) (4 (17, 8) (1x1) 142 [[1]] ) (3 (17, 10) (1x1) 143 [[1]] ) (6 (17, 11) (1x1) 144 [[1]] ) (5 (17, 13) (1x1) 145 [[1]] ) (4 (17, 15) (1x1) 146 [[1]] ) (3 (17, 17) (1x1) 147 [[1]] ) (3 (15, 1) (2x2) 114 [[0, 1], [1, 0]] ) (6 (15, 5) (2x2) 117 [[1, 0], [0, 1]] ) (3 (15, 8) (2x2) 120 [[0, 1], [1, 0]] ) (6 (15, 12) (2x2) 123 [[1, 0], [0, 1]] ) (3 (15, 15) (2x2) 126 [[0, 1], [1, 0]] ) (7 (16, 2) (2x2) 129 [[0, 1], [1, 0]] ) (2 (16, 4) (2x2) 130 [[1, 0], [0, 1]] ) (7 (16, 9) (2x2) 133 [[0, 1], [1, 0]] ) (2 (16, 11) (2x2) 134 [[1, 0], [0, 1]] ) (7 (16, 16) (2x2) 137 [[0, 1], [1, 0]] )))
Output tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (4 (1, 3) (1x1) 4 [[1]] ) (5 (1, 4) (1x1) 5 [[1]] ) (7 (1, 6) (1x1) 7 [[1]] ) (5 (2, 2) (1x1) 17 [[1]] ) (4 (2, 5) (1x1) 20 [[1]] ) (4 (3, 1) (1x1) 27 [[1]] ) (5 (3, 6) (1x1) 30 [[1]] ) (5 (4, 1) (1x1) 37 [[1]] ) (4 (4, 6) (1x1) 40 [[1]] ) (4 (5, 2) (1x1) 49 [[1]] ) (5 (5, 5) (1x1) 50 [[1]] ) (7 (6, 1) (1x1) 58 [[1]] ) (5 (6, 3) (1x1) 59 [[1]] ) (4 (6, 4) (1x1) 60 [[1]] ) (2 (6, 6) (1x1) 61 [[1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (6 (1, 5) (2x2) 6 [[1, 0], [0, 1]] ) (7 (2, 2) (2x2) 18 [[0, 1], [1, 0]] ) (2 (2, 4) (2x2) 19 [[1, 0], [0, 1]] ) (3 (3, 3) (2x2) 28 [[1, 0], [0, 1]] ) (6 (3, 3) (2x2) 29 [[0, 1], [1, 0]] ) (2 (4, 2) (2x2) 38 [[1, 0], [0, 1]] ) (7 (4, 4) (2x2) 39 [[0, 1], [1, 0]] ) (6 (5, 1) (2x2) 48 [[1, 0], [0, 1]] ) (3 (5, 5) (2x2) 51 [[0, 1], [1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]] (2 (1, 8) (1x1) 8 [[1]] ) (4 (1, 10) (1x1) 10 [[1]] ) (5 (1, 11) (1x1) 11 [[1]] ) (7 (1, 13) (1x1) 13 [[1]] ) (2 (1, 15) (1x1) 14 [[1]] ) (4 (1, 17) (1x1) 16 [[1]] ) (5 (2, 9) (1x1) 21 [[1]] ) (4 (2, 12) (1x1) 24 [[1]] ) (5 (2, 16) (1x1) 25 [[1]] ) (4 (3, 8) (1x1) 31 [[1]] ) (5 (3, 13) (1x1) 34 [[1]] ) (4 (3, 15) (1x1) 35 [[1]] ) (3 (3, 17) (1x1) 36 [[1]] ) (5 (4, 8) (1x1) 41 [[1]] ) (4 (4, 13) (1x1) 44 [[1]] ) (5 (4, 15) (1x1) 45 [[1]] ) (6 (4, 17) (1x1) 47 [[1]] ) (4 (5, 9) (1x1) 53 [[1]] ) (5 (5, 12) (1x1) 54 [[1]] ) (4 (5, 16) (1x1) 57 [[1]] ) (7 (6, 8) (1x1) 62 [[1]] ) (5 (6, 10) (1x1) 63 [[1]] ) (4 (6, 11) (1x1) 64 [[1]] ) (2 (6, 13) (1x1) 65 [[1]] ) (7 (6, 15) (1x1) 66 [[1]] ) (5 (6, 17) (1x1) 67 [[1]] ) (2 (8, 1) (1x1) 68 [[1]] ) (4 (8, 3) (1x1) 70 [[1]] ) (5 (8, 4) (1x1) 71 [[1]] ) (7 (8, 6) (1x1) 73 [[1]] ) (2 (8, 8) (1x1) 74 [[1]] ) (4 (8, 10) (1x1) 76 [[1]] ) (5 (8, 11) (1x1) 77 [[1]] ) (7 (8, 13) (1x1) 79 [[1]] ) (2 (8, 15) (1x1) 80 [[1]] ) (4 (8, 17) (1x1) 82 [[1]] ) (5 (9, 2) (1x1) 83 [[1]] ) (4 (9, 5) (1x1) 86 [[1]] ) (5 (9, 9) (1x1) 87 [[1]] ) (4 (9, 12) (1x1) 90 [[1]] ) (5 (9, 16) (1x1) 91 [[1]] ) (4 (10, 1) (1x1) 93 [[1]] ) (5 (10, 6) (1x1) 96 [[1]] ) (4 (10, 8) (1x1) 97 [[1]] ) (5 (10, 13) (1x1) 100 [[1]] ) (4 (10, 15) (1x1) 101 [[1]] ) (3 (10, 17) (1x1) 102 [[1]] ) (5 (11, 1) (1x1) 103 [[1]] ) (4 (11, 6) (1x1) 106 [[1]] ) (5 (11, 8) (1x1) 107 [[1]] ) (4 (11, 13) (1x1) 110 [[1]] ) (5 (11, 15) (1x1) 111 [[1]] ) (6 (11, 17) (1x1) 113 [[1]] ) (4 (12, 2) (1x1) 115 [[1]] ) (5 (12, 5) (1x1) 116 [[1]] ) (4 (12, 9) (1x1) 119 [[1]] ) (5 (12, 12) (1x1) 120 [[1]] ) (4 (12, 16) (1x1) 123 [[1]] ) (7 (13, 1) (1x1) 124 [[1]] ) (5 (13, 3) (1x1) 125 [[1]] ) (4 (13, 4) (1x1) 126 [[1]] ) (2 (13, 6) (1x1) 127 [[1]] ) (7 (13, 8) (1x1) 128 [[1]] ) (5 (13, 10) (1x1) 129 [[1]] ) (4 (13, 11) (1x1) 130 [[1]] ) (2 (13, 13) (1x1) 131 [[1]] ) (7 (13, 15) (1x1) 132 [[1]] ) (5 (13, 17) (1x1) 133 [[1]] ) (2 (15, 1) (1x1) 134 [[1]] ) (4 (15, 3) (1x1) 136 [[1]] ) (5 (15, 4) (1x1) 137 [[1]] ) (7 (15, 6) (1x1) 139 [[1]] ) (2 (15, 8) (1x1) 140 [[1]] ) (4 (15, 10) (1x1) 142 [[1]] ) (5 (15, 11) (1x1) 143 [[1]] ) (7 (15, 13) (1x1) 145 [[1]] ) (2 (15, 15) (1x1) 146 [[1]] ) (4 (15, 17) (1x1) 148 [[1]] ) (5 (16, 2) (1x1) 149 [[1]] ) (4 (16, 5) (1x1) 152 [[1]] ) (5 (16, 9) (1x1) 153 [[1]] ) (4 (16, 12) (1x1) 156 [[1]] ) (5 (16, 16) (1x1) 157 [[1]] ) (4 (17, 1) (1x1) 159 [[1]] ) (3 (17, 3) (1x1) 160 [[1]] ) (6 (17, 4) (1x1) 161 [[1]] ) (5 (17, 6) (1x1) 162 [[1]] ) (4 (17, 8) (1x1) 163 [[1]] ) (3 (17, 10) (1x1) 164 [[1]] ) (6 (17, 11) (1x1) 165 [[1]] ) (5 (17, 13) (1x1) 166 [[1]] ) (4 (17, 15) (1x1) 167 [[1]] ) (3 (17, 17) (1x1) 168 [[1]] ) (3 (1, 8) (2x2) 9 [[0, 1], [1, 0]] ) (6 (1, 12) (2x2) 12 [[1, 0], [0, 1]] ) (3 (1, 15) (2x2) 15 [[0, 1], [1, 0]] ) (7 (2, 9) (2x2) 22 [[0, 1], [1, 0]] ) (2 (2, 11) (2x2) 23 [[1, 0], [0, 1]] ) (7 (2, 16) (2x2) 26 [[0, 1], [1, 0]] ) (3 (3, 10) (2x2) 32 [[1, 0], [0, 1]] ) (6 (3, 10) (2x2) 33 [[0, 1], [1, 0]] ) (2 (4, 9) (2x2) 42 [[1, 0], [0, 1]] ) (7 (4, 11) (2x2) 43 [[0, 1], [1, 0]] ) (2 (4, 16) (2x2) 46 [[1, 0], [0, 1]] ) (6 (5, 8) (2x2) 52 [[1, 0], [0, 1]] ) (3 (5, 12) (2x2) 55 [[0, 1], [1, 0]] ) (6 (5, 15) (2x2) 56 [[1, 0], [0, 1]] ) (3 (8, 1) (2x2) 69 [[0, 1], [1, 0]] ) (6 (8, 5) (2x2) 72 [[1, 0], [0, 1]] ) (3 (8, 8) (2x2) 75 [[0, 1], [1, 0]] ) (6 (8, 12) (2x2) 78 [[1, 0], [0, 1]] ) (3 (8, 15) (2x2) 81 [[0, 1], [1, 0]] ) (7 (9, 2) (2x2) 84 [[0, 1], [1, 0]] ) (2 (9, 4) (2x2) 85 [[1, 0], [0, 1]] ) (7 (9, 9) (2x2) 88 [[0, 1], [1, 0]] ) (2 (9, 11) (2x2) 89 [[1, 0], [0, 1]] ) (7 (9, 16) (2x2) 92 [[0, 1], [1, 0]] ) (3 (10, 3) (2x2) 94 [[1, 0], [0, 1]] ) (6 (10, 3) (2x2) 95 [[0, 1], [1, 0]] ) (3 (10, 10) (2x2) 98 [[1, 0], [0, 1]] ) (6 (10, 10) (2x2) 99 [[0, 1], [1, 0]] ) (2 (11, 2) (2x2) 104 [[1, 0], [0, 1]] ) (7 (11, 4) (2x2) 105 [[0, 1], [1, 0]] ) (2 (11, 9) (2x2) 108 [[1, 0], [0, 1]] ) (7 (11, 11) (2x2) 109 [[0, 1], [1, 0]] ) (2 (11, 16) (2x2) 112 [[1, 0], [0, 1]] ) (6 (12, 1) (2x2) 114 [[1, 0], [0, 1]] ) (3 (12, 5) (2x2) 117 [[0, 1], [1, 0]] ) (6 (12, 8) (2x2) 118 [[1, 0], [0, 1]] ) (3 (12, 12) (2x2) 121 [[0, 1], [1, 0]] ) (6 (12, 15) (2x2) 122 [[1, 0], [0, 1]] ) (3 (15, 1) (2x2) 135 [[0, 1], [1, 0]] ) (6 (15, 5) (2x2) 138 [[1, 0], [0, 1]] ) (3 (15, 8) (2x2) 141 [[0, 1], [1, 0]] ) (6 (15, 12) (2x2) 144 [[1, 0], [0, 1]] ) (3 (15, 15) (2x2) 147 [[0, 1], [1, 0]] ) (7 (16, 2) (2x2) 150 [[0, 1], [1, 0]] ) (2 (16, 4) (2x2) 151 [[1, 0], [0, 1]] ) (7 (16, 9) (2x2) 154 [[0, 1], [1, 0]] ) (2 (16, 11) (2x2) 155 [[1, 0], [0, 1]] ) (7 (16, 16) (2x2) 158 [[0, 1], [1, 0]] )))

Train Example 3
Input Tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (4 (1, 3) (1x1) 4 [[1]] ) (5 (1, 4) (1x1) 5 [[1]] ) (6 (1, 5) (1x1) 6 [[1]] ) (8 (1, 7) (1x1) 8 [[1]] ) (5 (2, 2) (1x1) 17 [[1]] ) (1 (2, 4) (1x1) 19 [[1]] ) (5 (2, 6) (1x1) 21 [[1]] ) (4 (3, 1) (1x1) 28 [[1]] ) (2 (3, 3) (1x1) 29 [[1]] ) (8 (3, 5) (1x1) 31 [[1]] ) (6 (3, 7) (1x1) 32 [[1]] ) (5 (4, 1) (1x1) 38 [[1]] ) (1 (4, 2) (1x1) 39 [[1]] ) (1 (4, 4) (1x1) 40 [[1]] ) (1 (4, 6) (1x1) 41 [[1]] ) (5 (4, 7) (1x1) 42 [[1]] ) (6 (5, 1) (1x1) 47 [[1]] ) (8 (5, 3) (1x1) 49 [[1]] ) (2 (5, 5) (1x1) 50 [[1]] ) (4 (5, 7) (1x1) 52 [[1]] ) (5 (6, 2) (1x1) 59 [[1]] ) (1 (6, 4) (1x1) 60 [[1]] ) (5 (6, 6) (1x1) 61 [[1]] ) (8 (7, 1) (1x1) 70 [[1]] ) (6 (7, 3) (1x1) 71 [[1]] ) (5 (7, 4) (1x1) 72 [[1]] ) (4 (7, 5) (1x1) 73 [[1]] ) (2 (7, 7) (1x1) 74 [[1]] ) (2 (9, 1) (1x1) 81 [[1]] ) (5 (10, 2) (1x1) 91 [[1]] ) (4 (11, 1) (1x1) 99 [[1]] ) (2 (11, 3) (1x1) 100 [[1]] ) (8 (11, 5) (1x1) 102 [[1]] ) (3 (11, 6) (1x1) 103 [[1]] ) (6 (11, 7) (1x1) 104 [[1]] ) (5 (12, 1) (1x1) 111 [[1]] ) (1 (12, 2) (1x1) 112 [[1]] ) (1 (12, 4) (1x1) 113 [[1]] ) (1 (12, 6) (1x1) 114 [[1]] ) (5 (12, 7) (1x1) 115 [[1]] ) (6 (13, 1) (1x1) 122 [[1]] ) (8 (13, 3) (1x1) 124 [[1]] ) (2 (13, 5) (1x1) 125 [[1]] ) (5 (14, 2) (1x1) 134 [[1]] ) (1 (14, 4) (1x1) 135 [[1]] ) (7 (14, 5) (1x1) 136 [[1]] ) (8 (15, 1) (1x1) 143 [[1]] ) (6 (15, 3) (1x1) 144 [[1]] ) (3 (15, 6) (1x1) 145 [[1]] ) (2 (15, 7) (1x1) 146 [[1]] ) (2 (17, 1) (1x1) 153 [[1]] ) (3 (17, 2) (1x1) 154 [[1]] ) (4 (17, 3) (1x1) 155 [[1]] ) (5 (17, 4) (1x1) 156 [[1]] ) (6 (17, 5) (1x1) 157 [[1]] ) (7 (17, 6) (1x1) 158 [[1]] ) (8 (17, 7) (1x1) 159 [[1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (7 (1, 6) (2x2) 7 [[1, 0], [0, 1]] ) (7 (2, 2) (2x2) 18 [[0, 1], [1, 0]] ) (3 (2, 5) (2x2) 20 [[1, 0], [0, 1]] ) (3 (5, 2) (2x2) 48 [[1, 0], [0, 1]] ) (7 (5, 5) (2x2) 51 [[0, 1], [1, 0]] ) (7 (6, 1) (2x2) 58 [[1, 0], [0, 1]] ) (3 (6, 6) (2x2) 62 [[0, 1], [1, 0]] ) (3 (9, 1) (2x2) 82 [[0, 1], [1, 0]] ) (7 (10, 2) (2x2) 92 [[0, 1], [1, 0]] ) (3 (13, 2) (2x2) 123 [[1, 0], [0, 1]] ) (7 (14, 1) (2x2) 133 [[1, 0], [0, 1]] ) (5 (3, 3) (3x3) 30 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (5 (11, 3) (3x3) 101 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]] (2 (1, 9) (1x1) 9 [[1]] ) (4 (1, 11) (1x1) 11 [[1]] ) (5 (1, 12) (1x1) 12 [[1]] ) (6 (1, 13) (1x1) 13 [[1]] ) (8 (1, 15) (1x1) 15 [[1]] ) (2 (1, 17) (1x1) 16 [[1]] ) (5 (2, 10) (1x1) 22 [[1]] ) (1 (2, 12) (1x1) 24 [[1]] ) (3 (2, 13) (1x1) 25 [[1]] ) (5 (2, 14) (1x1) 26 [[1]] ) (3 (2, 17) (1x1) 27 [[1]] ) (4 (3, 9) (1x1) 33 [[1]] ) (2 (3, 11) (1x1) 34 [[1]] ) (8 (3, 13) (1x1) 36 [[1]] ) (4 (3, 17) (1x1) 37 [[1]] ) (5 (4, 9) (1x1) 43 [[1]] ) (1 (4, 10) (1x1) 44 [[1]] ) (1 (4, 12) (1x1) 45 [[1]] ) (5 (4, 17) (1x1) 46 [[1]] ) (6 (5, 9) (1x1) 53 [[1]] ) (8 (5, 11) (1x1) 55 [[1]] ) (2 (5, 13) (1x1) 56 [[1]] ) (6 (5, 17) (1x1) 57 [[1]] ) (5 (6, 10) (1x1) 64 [[1]] ) (1 (6, 12) (1x1) 65 [[1]] ) (7 (6, 13) (1x1) 66 [[1]] ) (5 (6, 14) (1x1) 67 [[1]] ) (7 (6, 17) (1x1) 69 [[1]] ) (8 (7, 9) (1x1) 75 [[1]] ) (6 (7, 11) (1x1) 76 [[1]] ) (5 (7, 12) (1x1) 77 [[1]] ) (4 (7, 13) (1x1) 78 [[1]] ) (2 (7, 15) (1x1) 79 [[1]] ) (8 (7, 17) (1x1) 80 [[1]] ) (2 (9, 9) (1x1) 83 [[1]] ) (4 (9, 11) (1x1) 85 [[1]] ) (5 (9, 12) (1x1) 86 [[1]] ) (6 (9, 13) (1x1) 87 [[1]] ) (8 (9, 15) (1x1) 89 [[1]] ) (2 (9, 17) (1x1) 90 [[1]] ) (5 (10, 10) (1x1) 93 [[1]] ) (1 (10, 12) (1x1) 95 [[1]] ) (5 (10, 14) (1x1) 97 [[1]] ) (3 (10, 17) (1x1) 98 [[1]] ) (4 (11, 9) (1x1) 105 [[1]] ) (2 (11, 11) (1x1) 106 [[1]] ) (8 (11, 13) (1x1) 108 [[1]] ) (6 (11, 15) (1x1) 109 [[1]] ) (4 (11, 17) (1x1) 110 [[1]] ) (5 (12, 9) (1x1) 116 [[1]] ) (1 (12, 10) (1x1) 117 [[1]] ) (1 (12, 12) (1x1) 118 [[1]] ) (1 (12, 14) (1x1) 119 [[1]] ) (5 (12, 15) (1x1) 120 [[1]] ) (5 (12, 17) (1x1) 121 [[1]] ) (6 (13, 9) (1x1) 126 [[1]] ) (8 (13, 11) (1x1) 128 [[1]] ) (2 (13, 13) (1x1) 129 [[1]] ) (4 (13, 15) (1x1) 131 [[1]] ) (6 (13, 17) (1x1) 132 [[1]] ) (5 (14, 10) (1x1) 138 [[1]] ) (1 (14, 12) (1x1) 139 [[1]] ) (5 (14, 14) (1x1) 140 [[1]] ) (7 (14, 17) (1x1) 142 [[1]] ) (8 (15, 9) (1x1) 147 [[1]] ) (6 (15, 11) (1x1) 148 [[1]] ) (5 (15, 12) (1x1) 149 [[1]] ) (4 (15, 13) (1x1) 150 [[1]] ) (2 (15, 15) (1x1) 151 [[1]] ) (8 (15, 17) (1x1) 152 [[1]] ) (2 (17, 9) (1x1) 160 [[1]] ) (3 (17, 10) (1x1) 161 [[1]] ) (4 (17, 11) (1x1) 162 [[1]] ) (5 (17, 12) (1x1) 163 [[1]] ) (6 (17, 13) (1x1) 164 [[1]] ) (7 (17, 14) (1x1) 165 [[1]] ) (8 (17, 15) (1x1) 166 [[1]] ) (2 (17, 17) (1x1) 167 [[1]] ) (3 (1, 9) (2x2) 10 [[0, 1], [1, 0]] ) (7 (1, 14) (2x2) 14 [[1, 0], [0, 1]] ) (7 (2, 10) (2x2) 23 [[0, 1], [1, 0]] ) (3 (5, 10) (2x2) 54 [[1, 0], [0, 1]] ) (7 (6, 9) (2x2) 63 [[1, 0], [0, 1]] ) (3 (6, 14) (2x2) 68 [[0, 1], [1, 0]] ) (3 (9, 9) (2x2) 84 [[0, 1], [1, 0]] ) (7 (9, 14) (2x2) 88 [[1, 0], [0, 1]] ) (7 (10, 10) (2x2) 94 [[0, 1], [1, 0]] ) (3 (10, 13) (2x2) 96 [[1, 0], [0, 1]] ) (3 (13, 10) (2x2) 127 [[1, 0], [0, 1]] ) (7 (13, 13) (2x2) 130 [[0, 1], [1, 0]] ) (7 (14, 9) (2x2) 137 [[1, 0], [0, 1]] ) (3 (14, 14) (2x2) 141 [[0, 1], [1, 0]] ) (5 (3, 11) (3x3) 35 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (5 (11, 11) (3x3) 107 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] )))
Output tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 2 [[1]] ) (4 (1, 3) (1x1) 4 [[1]] ) (5 (1, 4) (1x1) 5 [[1]] ) (6 (1, 5) (1x1) 6 [[1]] ) (8 (1, 7) (1x1) 8 [[1]] ) (5 (2, 2) (1x1) 17 [[1]] ) (1 (2, 4) (1x1) 19 [[1]] ) (5 (2, 6) (1x1) 21 [[1]] ) (4 (3, 1) (1x1) 28 [[1]] ) (2 (3, 3) (1x1) 29 [[1]] ) (8 (3, 5) (1x1) 31 [[1]] ) (6 (3, 7) (1x1) 32 [[1]] ) (5 (4, 1) (1x1) 39 [[1]] ) (1 (4, 2) (1x1) 40 [[1]] ) (1 (4, 4) (1x1) 41 [[1]] ) (1 (4, 6) (1x1) 42 [[1]] ) (5 (4, 7) (1x1) 43 [[1]] ) (6 (5, 1) (1x1) 50 [[1]] ) (8 (5, 3) (1x1) 52 [[1]] ) (2 (5, 5) (1x1) 53 [[1]] ) (4 (5, 7) (1x1) 55 [[1]] ) (5 (6, 2) (1x1) 64 [[1]] ) (1 (6, 4) (1x1) 65 [[1]] ) (5 (6, 6) (1x1) 66 [[1]] ) (8 (7, 1) (1x1) 74 [[1]] ) (6 (7, 3) (1x1) 75 [[1]] ) (5 (7, 4) (1x1) 76 [[1]] ) (4 (7, 5) (1x1) 77 [[1]] ) (2 (7, 7) (1x1) 78 [[1]] ) (3 (1, 1) (2x2) 3 [[0, 1], [1, 0]] ) (7 (1, 6) (2x2) 7 [[1, 0], [0, 1]] ) (7 (2, 2) (2x2) 18 [[0, 1], [1, 0]] ) (3 (2, 5) (2x2) 20 [[1, 0], [0, 1]] ) (3 (5, 2) (2x2) 51 [[1, 0], [0, 1]] ) (7 (5, 5) (2x2) 54 [[0, 1], [1, 0]] ) (7 (6, 1) (2x2) 63 [[1, 0], [0, 1]] ) (3 (6, 6) (2x2) 67 [[0, 1], [1, 0]] ) (5 (3, 3) (3x3) 30 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]] (2 (1, 9) (1x1) 9 [[1]] ) (4 (1, 11) (1x1) 11 [[1]] ) (5 (1, 12) (1x1) 12 [[1]] ) (6 (1, 13) (1x1) 13 [[1]] ) (8 (1, 15) (1x1) 15 [[1]] ) (2 (1, 17) (1x1) 16 [[1]] ) (5 (2, 10) (1x1) 22 [[1]] ) (1 (2, 12) (1x1) 24 [[1]] ) (5 (2, 14) (1x1) 26 [[1]] ) (3 (2, 17) (1x1) 27 [[1]] ) (4 (3, 9) (1x1) 33 [[1]] ) (2 (3, 11) (1x1) 34 [[1]] ) (8 (3, 13) (1x1) 36 [[1]] ) (6 (3, 15) (1x1) 37 [[1]] ) (4 (3, 17) (1x1) 38 [[1]] ) (5 (4, 9) (1x1) 44 [[1]] ) (1 (4, 10) (1x1) 45 [[1]] ) (1 (4, 12) (1x1) 46 [[1]] ) (1 (4, 14) (1x1) 47 [[1]] ) (5 (4, 15) (1x1) 48 [[1]] ) (5 (4, 17) (1x1) 49 [[1]] ) (6 (5, 9) (1x1) 56 [[1]] ) (8 (5, 11) (1x1) 58 [[1]] ) (2 (5, 13) (1x1) 59 [[1]] ) (4 (5, 15) (1x1) 61 [[1]] ) (6 (5, 17) (1x1) 62 [[1]] ) (5 (6, 10) (1x1) 69 [[1]] ) (1 (6, 12) (1x1) 70 [[1]] ) (5 (6, 14) (1x1) 71 [[1]] ) (7 (6, 17) (1x1) 73 [[1]] ) (8 (7, 9) (1x1) 79 [[1]] ) (6 (7, 11) (1x1) 80 [[1]] ) (5 (7, 12) (1x1) 81 [[1]] ) (4 (7, 13) (1x1) 82 [[1]] ) (2 (7, 15) (1x1) 83 [[1]] ) (8 (7, 17) (1x1) 84 [[1]] ) (2 (9, 1) (1x1) 85 [[1]] ) (4 (9, 3) (1x1) 87 [[1]] ) (5 (9, 4) (1x1) 88 [[1]] ) (6 (9, 5) (1x1) 89 [[1]] ) (8 (9, 7) (1x1) 91 [[1]] ) (2 (9, 9) (1x1) 92 [[1]] ) (4 (9, 11) (1x1) 94 [[1]] ) (5 (9, 12) (1x1) 95 [[1]] ) (6 (9, 13) (1x1) 96 [[1]] ) (8 (9, 15) (1x1) 98 [[1]] ) (2 (9, 17) (1x1) 99 [[1]] ) (5 (10, 2) (1x1) 100 [[1]] ) (1 (10, 4) (1x1) 102 [[1]] ) (5 (10, 6) (1x1) 104 [[1]] ) (5 (10, 10) (1x1) 105 [[1]] ) (1 (10, 12) (1x1) 107 [[1]] ) (5 (10, 14) (1x1) 109 [[1]] ) (3 (10, 17) (1x1) 110 [[1]] ) (4 (11, 1) (1x1) 111 [[1]] ) (2 (11, 3) (1x1) 112 [[1]] ) (8 (11, 5) (1x1) 114 [[1]] ) (6 (11, 7) (1x1) 115 [[1]] ) (4 (11, 9) (1x1) 116 [[1]] ) (2 (11, 11) (1x1) 117 [[1]] ) (8 (11, 13) (1x1) 119 [[1]] ) (6 (11, 15) (1x1) 120 [[1]] ) (4 (11, 17) (1x1) 121 [[1]] ) (5 (12, 1) (1x1) 122 [[1]] ) (1 (12, 2) (1x1) 123 [[1]] ) (1 (12, 4) (1x1) 124 [[1]] ) (1 (12, 6) (1x1) 125 [[1]] ) (5 (12, 7) (1x1) 126 [[1]] ) (5 (12, 9) (1x1) 127 [[1]] ) (1 (12, 10) (1x1) 128 [[1]] ) (1 (12, 12) (1x1) 129 [[1]] ) (1 (12, 14) (1x1) 130 [[1]] ) (5 (12, 15) (1x1) 131 [[1]] ) (5 (12, 17) (1x1) 132 [[1]] ) (6 (13, 1) (1x1) 133 [[1]] ) (8 (13, 3) (1x1) 135 [[1]] ) (2 (13, 5) (1x1) 136 [[1]] ) (4 (13, 7) (1x1) 138 [[1]] ) (6 (13, 9) (1x1) 139 [[1]] ) (8 (13, 11) (1x1) 141 [[1]] ) (2 (13, 13) (1x1) 142 [[1]] ) (4 (13, 15) (1x1) 144 [[1]] ) (6 (13, 17) (1x1) 145 [[1]] ) (5 (14, 2) (1x1) 147 [[1]] ) (1 (14, 4) (1x1) 148 [[1]] ) (5 (14, 6) (1x1) 149 [[1]] ) (5 (14, 10) (1x1) 152 [[1]] ) (1 (14, 12) (1x1) 153 [[1]] ) (5 (14, 14) (1x1) 154 [[1]] ) (7 (14, 17) (1x1) 156 [[1]] ) (8 (15, 1) (1x1) 157 [[1]] ) (6 (15, 3) (1x1) 158 [[1]] ) (5 (15, 4) (1x1) 159 [[1]] ) (4 (15, 5) (1x1) 160 [[1]] ) (2 (15, 7) (1x1) 161 [[1]] ) (8 (15, 9) (1x1) 162 [[1]] ) (6 (15, 11) (1x1) 163 [[1]] ) (5 (15, 12) (1x1) 164 [[1]] ) (4 (15, 13) (1x1) 165 [[1]] ) (2 (15, 15) (1x1) 166 [[1]] ) (8 (15, 17) (1x1) 167 [[1]] ) (2 (17, 1) (1x1) 168 [[1]] ) (3 (17, 2) (1x1) 169 [[1]] ) (4 (17, 3) (1x1) 170 [[1]] ) (5 (17, 4) (1x1) 171 [[1]] ) (6 (17, 5) (1x1) 172 [[1]] ) (7 (17, 6) (1x1) 173 [[1]] ) (8 (17, 7) (1x1) 174 [[1]] ) (2 (17, 9) (1x1) 175 [[1]] ) (3 (17, 10) (1x1) 176 [[1]] ) (4 (17, 11) (1x1) 177 [[1]] ) (5 (17, 12) (1x1) 178 [[1]] ) (6 (17, 13) (1x1) 179 [[1]] ) (7 (17, 14) (1x1) 180 [[1]] ) (8 (17, 15) (1x1) 181 [[1]] ) (2 (17, 17) (1x1) 182 [[1]] ) (3 (1, 9) (2x2) 10 [[0, 1], [1, 0]] ) (7 (1, 14) (2x2) 14 [[1, 0], [0, 1]] ) (7 (2, 10) (2x2) 23 [[0, 1], [1, 0]] ) (3 (2, 13) (2x2) 25 [[1, 0], [0, 1]] ) (3 (5, 10) (2x2) 57 [[1, 0], [0, 1]] ) (7 (5, 13) (2x2) 60 [[0, 1], [1, 0]] ) (7 (6, 9) (2x2) 68 [[1, 0], [0, 1]] ) (3 (6, 14) (2x2) 72 [[0, 1], [1, 0]] ) (3 (9, 1) (2x2) 86 [[0, 1], [1, 0]] ) (7 (9, 6) (2x2) 90 [[1, 0], [0, 1]] ) (3 (9, 9) (2x2) 93 [[0, 1], [1, 0]] ) (7 (9, 14) (2x2) 97 [[1, 0], [0, 1]] ) (7 (10, 2) (2x2) 101 [[0, 1], [1, 0]] ) (3 (10, 5) (2x2) 103 [[1, 0], [0, 1]] ) (7 (10, 10) (2x2) 106 [[0, 1], [1, 0]] ) (3 (10, 13) (2x2) 108 [[1, 0], [0, 1]] ) (3 (13, 2) (2x2) 134 [[1, 0], [0, 1]] ) (7 (13, 5) (2x2) 137 [[0, 1], [1, 0]] ) (3 (13, 10) (2x2) 140 [[1, 0], [0, 1]] ) (7 (13, 13) (2x2) 143 [[0, 1], [1, 0]] ) (7 (14, 1) (2x2) 146 [[1, 0], [0, 1]] ) (3 (14, 6) (2x2) 150 [[0, 1], [1, 0]] ) (7 (14, 9) (2x2) 151 [[1, 0], [0, 1]] ) (3 (14, 14) (2x2) 155 [[0, 1], [1, 0]] ) (5 (3, 11) (3x3) 35 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (5 (11, 3) (3x3) 113 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] ) (5 (11, 11) (3x3) 118 [[0, 1, 0], [1, 0, 1], [0, 1, 0]] )))

Test Example 
Input Tree:
(0 (0, 0) (18x18) 0 [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (1, 1) (1x1) 3 [[1]] ) (4 (1, 3) (1x1) 5 [[1]] ) (5 (1, 4) (1x1) 6 [[1]] ) (6 (1, 5) (1x1) 7 [[1]] ) (7 (1, 6) (1x1) 8 [[1]] ) (9 (1, 8) (1x1) 10 [[1]] ) (2 (1, 10) (1x1) 11 [[1]] ) (4 (1, 12) (1x1) 13 [[1]] ) (9 (1, 17) (1x1) 15 [[1]] ) (5 (2, 2) (1x1) 16 [[1]] ) (9 (2, 4) (1x1) 18 [[1]] ) (2 (2, 5) (1x1) 19 [[1]] ) (6 (2, 7) (1x1) 21 [[1]] ) (5 (2, 11) (1x1) 22 [[1]] ) (6 (2, 16) (1x1) 24 [[1]] ) (4 (3, 1) (1x1) 25 [[1]] ) (1 (3, 3) (1x1) 26 [[1]] ) (1 (3, 6) (1x1) 29 [[1]] ) (7 (3, 8) (1x1) 30 [[1]] ) (4 (3, 10) (1x1) 31 [[1]] ) (1 (3, 12) (1x1) 32 [[1]] ) (1 (3, 15) (1x1) 35 [[1]] ) (4 (3, 16) (1x1) 36 [[1]] ) (7 (3, 17) (1x1) 37 [[1]] ) (5 (4, 1) (1x1) 38 [[1]] ) (9 (4, 2) (1x1) 39 [[1]] ) (8 (4, 4) (1x1) 40 [[1]] ) (3 (4, 5) (1x1) 41 [[1]] ) (2 (4, 7) (1x1) 42 [[1]] ) (6 (4, 8) (1x1) 43 [[1]] ) (5 (4, 10) (1x1) 44 [[1]] ) (9 (4, 11) (1x1) 45 [[1]] ) (8 (4, 13) (1x1) 46 [[1]] ) (3 (4, 14) (1x1) 47 [[1]] ) (2 (4, 16) (1x1) 48 [[1]] ) (6 (4, 17) (1x1) 49 [[1]] ) (6 (5, 1) (1x1) 50 [[1]] ) (2 (5, 2) (1x1) 51 [[1]] ) (4 (5, 6) (1x1) 52 [[1]] ) (9 (5, 7) (1x1) 53 [[1]] ) (5 (5, 8) (1x1) 54 [[1]] ) (6 (5, 10) (1x1) 55 [[1]] ) (2 (5, 11) (1x1) 56 [[1]] ) (7 (5, 12) (1x1) 57 [[1]] ) (9 (5, 16) (1x1) 58 [[1]] ) (5 (5, 17) (1x1) 59 [[1]] ) (7 (6, 1) (1x1) 60 [[1]] ) (4 (6, 2) (1x1) 61 [[1]] ) (1 (6, 6) (1x1) 62 [[1]] ) (4 (6, 8) (1x1) 64 [[1]] ) (4 (6, 17) (1x1) 66 [[1]] ) (6 (7, 2) (1x1) 68 [[1]] ) (5 (7, 7) (1x1) 69 [[1]] ) (2 (7, 13) (1x1) 71 [[1]] ) (9 (7, 14) (1x1) 72 [[1]] ) (5 (7, 16) (1x1) 73 [[1]] ) (9 (8, 1) (1x1) 75 [[1]] ) (4 (8, 6) (1x1) 76 [[1]] ) (2 (8, 8) (1x1) 77 [[1]] ) (6 (8, 13) (1x1) 78 [[1]] ) (5 (8, 14) (1x1) 79 [[1]] ) (4 (8, 15) (1x1) 80 [[1]] ) (2 (8, 17) (1x1) 81 [[1]] ) (1 (0, 16) (1x2) 2 [[1, 1]] ) (3 (1, 1) (2x2) 4 [[0, 1], [1, 0]] ) (8 (1, 7) (2x2) 9 [[1, 0], [0, 1]] ) (3 (1, 10) (2x2) 12 [[0, 1], [1, 0]] ) (8 (1, 16) (2x2) 14 [[1, 0], [0, 1]] ) (7 (2, 2) (2x2) 17 [[0, 1], [1, 0]] ) (4 (2, 6) (2x2) 20 [[1, 0], [0, 1]] ) (7 (2, 11) (2x2) 23 [[0, 1], [1, 0]] ) (4 (3, 3) (2x2) 27 [[0, 1], [1, 0]] ) (7 (3, 5) (2x2) 28 [[1, 0], [0, 1]] ) (4 (3, 12) (2x2) 33 [[0, 1], [1, 0]] ) (7 (3, 14) (2x2) 34 [[1, 0], [0, 1]] ) (7 (6, 6) (2x2) 63 [[0, 1], [1, 0]] ) (7 (6, 15) (2x2) 65 [[0, 1], [1, 0]] ) (8 (7, 1) (2x2) 67 [[1, 0], [0, 1]] ) (3 (7, 7) (2x2) 70 [[0, 1], [1, 0]] ) (3 (7, 16) (2x2) 74 [[0, 1], [1, 0]] ) (1 (0, 0) (18x18) 1 [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]] (2 (10, 1) (1x1) 82 [[1]] ) (4 (10, 3) (1x1) 84 [[1]] ) (5 (10, 4) (1x1) 85 [[1]] ) (6 (10, 5) (1x1) 86 [[1]] ) (7 (10, 6) (1x1) 87 [[1]] ) (9 (10, 8) (1x1) 89 [[1]] ) (2 (10, 10) (1x1) 90 [[1]] ) (4 (10, 12) (1x1) 92 [[1]] ) (5 (10, 13) (1x1) 93 [[1]] ) (6 (10, 14) (1x1) 94 [[1]] ) (7 (10, 15) (1x1) 95 [[1]] ) (9 (10, 17) (1x1) 97 [[1]] ) (5 (11, 2) (1x1) 98 [[1]] ) (9 (11, 4) (1x1) 100 [[1]] ) (2 (11, 5) (1x1) 101 [[1]] ) (6 (11, 7) (1x1) 103 [[1]] ) (5 (11, 11) (1x1) 104 [[1]] ) (9 (11, 13) (1x1) 106 [[1]] ) (2 (11, 14) (1x1) 107 [[1]] ) (6 (11, 16) (1x1) 109 [[1]] ) (4 (12, 1) (1x1) 110 [[1]] ) (1 (12, 3) (1x1) 111 [[1]] ) (4 (12, 4) (1x1) 112 [[1]] ) (1 (12, 6) (1x1) 114 [[1]] ) (7 (12, 8) (1x1) 115 [[1]] ) (4 (12, 10) (1x1) 116 [[1]] ) (1 (12, 12) (1x1) 117 [[1]] ) (1 (12, 15) (1x1) 120 [[1]] ) (7 (12, 17) (1x1) 121 [[1]] ) (2 (13, 7) (1x1) 124 [[1]] ) (6 (13, 8) (1x1) 125 [[1]] ) (5 (13, 10) (1x1) 126 [[1]] ) (9 (13, 11) (1x1) 127 [[1]] ) (2 (13, 16) (1x1) 130 [[1]] ) (6 (13, 17) (1x1) 131 [[1]] ) (9 (14, 7) (1x1) 133 [[1]] ) (5 (14, 8) (1x1) 134 [[1]] ) (6 (14, 10) (1x1) 135 [[1]] ) (2 (14, 11) (1x1) 136 [[1]] ) (9 (14, 16) (1x1) 139 [[1]] ) (5 (14, 17) (1x1) 140 [[1]] ) (7 (15, 4) (1x1) 141 [[1]] ) (1 (15, 6) (1x1) 142 [[1]] ) (4 (15, 8) (1x1) 144 [[1]] ) (7 (15, 10) (1x1) 145 [[1]] ) (1 (15, 12) (1x1) 147 [[1]] ) (1 (15, 15) (1x1) 148 [[1]] ) (4 (15, 17) (1x1) 150 [[1]] ) (2 (16, 4) (1x1) 151 [[1]] ) (9 (16, 5) (1x1) 152 [[1]] ) (5 (16, 7) (1x1) 153 [[1]] ) (6 (16, 11) (1x1) 156 [[1]] ) (2 (16, 13) (1x1) 157 [[1]] ) (9 (16, 14) (1x1) 158 [[1]] ) (5 (16, 16) (1x1) 159 [[1]] ) (9 (17, 1) (1x1) 161 [[1]] ) (8 (17, 2) (1x1) 162 [[1]] ) (7 (17, 3) (1x1) 163 [[1]] ) (6 (17, 4) (1x1) 164 [[1]] ) (5 (17, 5) (1x1) 165 [[1]] ) (4 (17, 6) (1x1) 166 [[1]] ) (2 (17, 8) (1x1) 167 [[1]] ) (9 (17, 10) (1x1) 168 [[1]] ) (7 (17, 12) (1x1) 169 [[1]] ) (6 (17, 13) (1x1) 170 [[1]] ) (5 (17, 14) (1x1) 171 [[1]] ) (4 (17, 15) (1x1) 172 [[1]] ) (2 (17, 17) (1x1) 173 [[1]] ) (3 (10, 1) (2x2) 83 [[0, 1], [1, 0]] ) (8 (10, 7) (2x2) 88 [[1, 0], [0, 1]] ) (3 (10, 10) (2x2) 91 [[0, 1], [1, 0]] ) (8 (10, 16) (2x2) 96 [[1, 0], [0, 1]] ) (7 (11, 2) (2x2) 99 [[0, 1], [1, 0]] ) (4 (11, 6) (2x2) 102 [[1, 0], [0, 1]] ) (7 (11, 11) (2x2) 105 [[0, 1], [1, 0]] ) (4 (11, 15) (2x2) 108 [[1, 0], [0, 1]] ) (7 (12, 5) (2x2) 113 [[1, 0], [0, 1]] ) (4 (12, 12) (2x2) 118 [[0, 1], [1, 0]] ) (7 (12, 14) (2x2) 119 [[1, 0], [0, 1]] ) (8 (13, 4) (2x2) 122 [[1, 0], [0, 1]] ) (3 (13, 4) (2x2) 123 [[0, 1], [1, 0]] ) (8 (13, 13) (2x2) 128 [[1, 0], [0, 1]] ) (3 (13, 13) (2x2) 129 [[0, 1], [1, 0]] ) (4 (14, 5) (2x2) 132 [[0, 1], [1, 0]] ) (7 (14, 12) (2x2) 137 [[1, 0], [0, 1]] ) (4 (14, 14) (2x2) 138 [[0, 1], [1, 0]] ) (7 (15, 6) (2x2) 143 [[0, 1], [1, 0]] ) (4 (15, 11) (2x2) 146 [[1, 0], [0, 1]] ) (7 (15, 15) (2x2) 149 [[0, 1], [1, 0]] ) (3 (16, 7) (2x2) 154 [[0, 1], [1, 0]] ) (8 (16, 10) (2x2) 155 [[1, 0], [0, 1]] ) (3 (16, 16) (2x2) 160 [[0, 1], [1, 0]] )))

Bot: <think>
Alright, let's see what this user has given me. They've provided a series of numbers and matrices enclosed in parentheses, which seems to be part of some kind of structured data or maybe a mathematical expression. I need to figure out what they're asking for.

First glance, the numbers are paired with letters and sometimes followed by more numbers and brackets. There's also mentions like (1x1), (2x2), and some matrices inside. These look like eigenvalues or something similar because of the numbers following parentheses. Maybe it's related to linear algebra?

I notice that after each number, there's a pair in parentheses: like (17, 2) then a matrix [[1]]. Then another set, like (3 (10, 1) ...). It seems like these are multiple points or tuples with associated matrices. The user didn't ask anything specific yet; they just provided this data.

Perhaps the user is trying to analyze these tuples and their corresponding matrices for patterns or properties. Maybe they want eigenvalues calculated? Or perhaps something else related to linear algebra, like diagonalization or eigenvectors?

Looking deeper, I see that some of the numbers repeat with different matrices. For example, (17, 2) has [[1]], which is a simple matrix, while others have more complex ones like [[0,1],[1,0]] and [[1,0],[0,1]]. These are swap and identity matrices, respectively.

I should consider if the user wants eigenvalues calculated for each of these matrices. For example, (17,2) with matrix [[1]]—the eigenvalue is just 1 since it's a 1x1 matrix. But then there are larger matrices like 2x2 and even some 4x4 or more.

Wait, actually, in the data provided, all the matrices seem to be either 1x1 or 2x2, except for one entry which has [[0, 1], [1, 0]]—that's a 2x2 swap matrix. So maybe eigenvalues are required here.

Alternatively, perhaps it's about some kind of encoding where these numbers and matrices represent transformations or something in a computational context, like in machine learning with TensorFlow or PyTorch, but I'm not sure.

Another thought: the numbers might be node IDs or indices in a graph, and the matrices could be adjacency matrices for those nodes. Then again, without more context, it's hard to tell.

Given that, my best guess is that the user wants me to compute eigenvalues or something similar from these matrices. Alternatively, maybe they want eigenvectors extracted? Or perhaps just properties like determinant or trace?

But since many of them are 1x1 matrices, their analysis would be straightforward—just taking the single element as the eigenvalue.

I should ask for clarification to make sure I understand what exactly is needed. Maybe in my response, I can mention that based on the data, it seems to involve tuples with numerical values and associated matrices, possibly related to linear algebra concepts like eigenvalues or matrix properties.

Perhaps I'll suggest computing eigenvalues since they're common in such contexts. That way, I provide a step-by-step explanation for each tuple's matrix, compute their eigenvalues, and present the results clearly.
</think>

It seems you've provided a list of tuples containing numerical values and matrices. Based on this data, it appears to be related to linear algebra or some form of structured computation where numbers are associated with specific transformations represented by matrices.

To provide assistance, I need more clarity on what exactly you're asking for. If you're looking for eigenvalues, properties, or another type of analysis involving these tuples and their associated matrices, please let me know!